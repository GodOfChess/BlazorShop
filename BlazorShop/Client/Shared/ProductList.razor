@inject IProductService ProductService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavManager

@if (_admin)
{
    <button class="btn btn-primary" @onclick='(() => NavManager.NavigateTo("/addproduct"))'>Add Product</button>
}
<ul class="list-unstyled">
    @foreach (var product in ProductService.Products)
    {
        <li class="media my-3">
            <div class="media-img-wrapper mr-3">
                <a href="/product/@product.Id">
                    <img class="media-img" src="@product.Img" alt="@product.Title" />
                </a>
            </div>
            <div class="media-body">
                <a href="/product/@product.Id">
                    <h4 class="mb-0">@product.Title</h4>
                </a>
                <p>@product.Info</p>
                <h5 class="price">
                    @product.Price &#8381;
                </h5>
                <AuthorizeView>
                    <Authorized>
                        @if (_admin)
                        {
                            <button class="btn btn-danger btn-sm" @onclick="(() => Delete(product.Id))">Delete</button>
                        }
                    </Authorized>
                </AuthorizeView>
            </div>
        </li>
    }
</ul>

@code {

    private bool _admin = false;

    protected override async Task OnInitializedAsync()
    {
        await ProductService.LoadProducts();
        _admin = await LocalStorage.GetItemAsync<bool>("admin");
    }

    private async Task Delete(int id)
    {
        await ProductService.DeleteProduct(id);
        await ProductService.LoadProducts();
    }
}
