@page "/cart"
@inject ICartService CartService

<h3>Shopping Cart</h3>

@if (cartItems == null)
{
    <span>Loading...</span>
}
else if (cartItems.Count == 0)
{
    <span>You have no items in your cart...</span>
}
else
{
    @foreach (var item in cartItems)
    {
        <div class="item-container">
            <div class="item-image-wrapper"><img class="item-image" src="@item.Image" alt="@item.ProductTitle" /></div>
            <div class="item-name">
                <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                <div class="item-price">@item.Price &#8381;</div>
                <button class="btn btn-danger mt-1 btn-sm" @onclick="() => Delete(item)">Delete</button>
            </div>
        </div>
    }
    <div class="total-item-price">
        Total (@cartItems.Count): @cartItems.Sum(item => item.Price) &#8381;
    </div>
}

@code {
    List<CartItem> cartItems;

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task Delete(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }
}
