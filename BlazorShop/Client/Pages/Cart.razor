@page "/cart"
@inject ICartService CartService
@inject IToastService ToastService
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthProvider
@inject IOrderService OrderService

<h3>Shopping Cart</h3>

@if (cartItems == null)
{
    <span>Loading...</span>
}
else if (cartItems.Count == 0)
{
    <span>You have no items in your cart...</span>
}
else
{
    @foreach (var item in cartItems)
    {
        <div class="item-container">
            <div class="item-image-wrapper"><img class="item-image" src="@item.Image" alt="@item.ProductTitle" /></div>
            <div class="item-name">
                <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                <div class="item-price">@item.Price &#8381;</div>
                <button class="btn btn-danger mt-1 btn-sm" @onclick="() => Delete(item)">Delete</button>
            </div>
        </div>
    }
    <div class="row total-item-price">
        Total (@cartItems.Count): @cartItems.Sum(item => item.Price) &#8381;
    </div>
    <AuthorizeView>
        <NotAuthorized>
            <div class="row mt-2">
                <div class="col">
                    <label for="username">Your Name</label>
                    <input class="form-text" required id="username" @bind-value="order.UserName" />
                    <button class="btn btn-success mt-2" @onclick="PostOrder">Order</button>
                </div>
            </div>
        </NotAuthorized>
        <Authorized>
            <div class="row mt-2 ml-1">
                <button class="btn btn-success" @onclick="PostOrder">Order</button>
            </div>
        </Authorized>
    </AuthorizeView>
}

@code {

    List<CartItem> cartItems;
    Order order = new Order();

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task Delete(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }

    private async void PostOrder()
    {
        if (await LocalStorage.GetItemAsync<string>("user") != null)
        {
            order.UserName = await LocalStorage.GetItemAsync<string>("user");
        }

        if (order.UserName == null || order.UserName == String.Empty)
        {
            ToastService.ShowError("Please, write your username");
        }
        else
        {
            ToastService.ShowSuccess("Success");
            order.Price = cartItems.Sum(item => item.Price).ToString();
            await OrderService.PostOrder(order);
        }
    }
}
